<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2023 Geo-Studios and/or its affiliates. All rights reserved.
  ~ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  ~
  ~ This code is free software; you can redistribute it and/or modify it under
  ~ the terms of the GNU General Public License version 2 only, as published
  ~ by the Free Software Foundation. Geo-Studios designates this particular
  ~ file as subject to the "Classpath" exception as provided
  ~ by Geo-Studio in the LICENSE file that accompanied this code.
  ~
  ~ This code is distributed in the hope that it will be useful, but WITHOUT
  ~ ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License version 2 for more details (a copy is
  ~ included in the LICENSE file that accompanied this code).
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ version 2 along with this work; if not, write to the Free Software
  ~ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.0">
    <xs:element name="recording">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="1">
                <xs:element name="events">
                    <xs:complexType>
                        <xs:sequence minOccurs="0" maxOccurs="unbounded">
                            <xs:element name="event" type="eventType" />
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="eventType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:choice>
                <xs:element name="struct" nillable="true" type="structType" />
                <xs:element name="array" nillable="true" type="arrayType" />
                <xs:element name="value" nillable="true" type="valueType" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute use="required" name="type" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="structType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:choice>
                <xs:element name="struct" nillable="true" type="structType" />
                <xs:element name="array" nillable="true" type="arrayType" />
                <xs:element name="value" nillable="true" type="valueType" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute use="required" name="name" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="arrayType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:choice>
                <xs:element name="struct" nillable="true" type="structElement" />
                <xs:element name="array" nillable="true" type="arrayElement" />
                <xs:element name="value" nillable="true" type="valueElement" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute use="required" name="size" type="xs:int" />
        <xs:attribute use="required" name="name" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="valueType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute use="required" name="name" type="xs:string" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="structElement">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:choice>
                <xs:element name="struct" nillable="true" type="structType" />
                <xs:element name="array" nillable="true" type="arrayType" />
                <xs:element name="value" nillable="true" type="valueType" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute use="required" name="index" type="xs:int" />
    </xs:complexType>
    <xs:complexType name="arrayElement">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:choice>
                <xs:element name="value" nillable="true" type="valueType" />
                <xs:element name="array" nillable="true" type="arrayType" />
                <xs:element name="struct" nillable="true" type="structType" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute use="required" name="index" type="xs:int" />
    </xs:complexType>
    <xs:complexType name="valueElement">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute use="required" name="index" type="xs:int" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>